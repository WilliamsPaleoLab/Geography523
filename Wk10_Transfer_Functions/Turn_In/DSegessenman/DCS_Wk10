#Geography 920 Wk 10 Assignment
#Fall 2018
#Daniel Segessenman

#Part 1 Code:

#Load relevant packages
library(analogue)
library(rioja)

#Load data for exercise
data(SWAP)
data(RLGH)

#Store depths for time series
depths <- RLGH$depths

#Prepare data for modern vs. fossil analogue techniques
modern <- SWAP$spec
fossil <- RLGH$spec
modern <- modern[,which(colnames(modern) %in% colnames(fossil))]
fossil <- fossil[, -25] #removes 'other' column
fossil <- replace(fossil, is.na(fossil), 0)
fossil <- analogue::tran(x = fossil, method = 'percent')
modern <- replace(modern, is.na(modern), 0)
modern <- analogue::tran(x = modern, method = 'percent')

#Perform MAT, WA, and WAPLS
mat_ph <- rioja::MAT(modern, SWAP$pH, k = 5, lean = FALSE)
plot(mat_ph, main = 'MAT model')
wa_ph <- rioja::WA(modern, SWAP$pH, lean = FALSE)
plot(wa_ph, main = 'WA model')
wapls_ph <- rioja::WAPLS(modern, SWAP$pH, npls = 5, lean = FALSE)
plot(wapls_ph, main = 'WAPLS model')

#Create the predictions based on models of MAT, WA, WAPLS
pred_mat_ph <- predict(mat_ph, fossil)
pred_wa_ph <- predict(wa_ph, fossil)
pred_wapls_ph <- predict(wapls_ph, fossil)

#Create scatter plots of data using depth as a time series
plot(depths, pred_mat_ph$fit[,'MAT'], ylab = 'Ph', main = 'MAT Scatter Time Series')
plot(depths, pred_wa_ph$fit, ylab = 'Ph', main = 'WA Scatter Time Series')
plot(depths, pred_wapls_ph$fit, ylab = 'Ph', main = 'WAPLS Sactter Time Series')

#Create line plots of data using depth as a time series
plot(depths$Depth, pred_mat_ph$fit[,'MAT'], ylab = 'Ph', main = 'MAT Line Time Series', type = 'l')
plot(depths$Depth, pred_wa_ph$fit, ylab = 'Ph', main = 'WA Line Time Series', type = 'l')
plot(depths$Depth, pred_wapls_ph$fit, ylab = 'Ph', main = 'WAPLS Line Time Series', type = 'l')

#Calculate correlations between models of MAT, WA, WAPLS
cor(pred_mat_ph$fit[,'MAT'], pred_wa_ph$fit)
cor(pred_mat_ph$fit[,'MAT'], pred_wapls_ph$fit)
cor(pred_wa_ph$fit, pred_wapls_ph$fit)

#Screeplot to determine the number of analogues in MAT
screeplot(mat_ph) #It appears that there are 5 analogues in MAT


#Part 2 Discussion:
The r^2 values for the randomly trained and cross validated variables are extremely
low, often below 0.05. The r^2 values for the cross validated real data are much
higher, as we might expect, around 0.7 and 0.8

#Part 2 Code:

#Load relevant packages
library(palaeoSig)
library(analogue)
library(rioja)
library(neotoma)

#Get necessary data for exercise
data(arctic.pollen)
arctic.pollen <- replace(arctic.pollen, is.na(arctic.pollen), 0)
data(arctic.env)
real <- arctic.pollen

#Train the arctic data using tjul and sjul
real_mat_tjul <- rioja::MAT(real, arctic.env$tjul, k = 5, lean = FALSE)
plot(real_mat_tjul, main = 'Real MAT tjul')

real_wa_tjul <- rioja::WA(real, arctic.env$tjul)
plot(real_wa_tjul, main = 'Real WA tjul')

real_mat_sjul <- rioja::MAT(real, arctic.env$sjul, k = 5, lean =FALSE)
plot(real_mat_sjul, main = 'Real MAT sjul')

real_wa_sjul <- rioja::WA(real, arctic.env$sjul)
plot(real_wa_sjul, main = 'Real WA sjul')

#Cross validation of training models and prediction models
cv_real_mat_tjul <- rioja::crossval(real_mat_tjul, verbose = FALSE)
plot(cv_real_mat_tjul, main = 'Real CV MAT tjul')
pfcv_real_mat_tjul <- rioja::performance(cv_real_mat_tjul)
pfcv_real_mat_tjul

cv_real_wa_tjul <- rioja::crossval(real_wa_tjul, verbose = FALSE)
plot(cv_real_wa_tjul, main = 'Real CV WA tjul')
pfcv_real_wa_tjul <- rioja::performance(cv_real_wa_tjul)
pfcv_real_wa_tjul

cv_real_mat_sjul <- rioja::crossval(real_mat_sjul, verbose = FALSE)
plot(cv_real_mat_sjul, main = 'Real CV MAT sjul')
pfcv_real_mat_sjul <- rioja::performance(cv_real_mat_sjul)
pfcv_real_mat_sjul

cv_real_wa_sjul <- rioja::crossval(real_wa_sjul, verbose = FALSE)
plot(cv_real_wa_sjul, main = 'Real CV WA sjul')
pfcv_real_wa_sjul <- rioja::performance(cv_real_wa_sjul)
pfcv_real_wa_sjul


#Create random data to train transfer functions
min <- min(arctic.pollen)
max <- max(arctic.pollen)
random <- data.frame(replicate(39, sample(min:max, 828, rep = TRUE)))
colnames(random) <- colnames(arctic.pollen)
random <- analogue::tran(x = random, method = 'percent')

#Train transfer functions with random data
rand_mat_tjul <- rioja::MAT(random, arctic.env$tjul, k = 5, lean = FALSE)
plot(rand_mat_tjul, main = 'Random MAT tjul')

rand_wa_tjul <- rioja::WA(random, arctic.env$tjul)
plot(rand_wa_tjul, main = 'Random WA tjul')

rand_mat_sjul <- rioja::MAT(random, arctic.env$sjul, k = 5, lean = FALSE)
plot(rand_mat_sjul, main = 'Random MAT sjul')

rand_wa_sjul <- rioja::WA(random, arctic.env$sjul)
plot(rand_wa_sjul, main = 'Random WA sjul')

#Cross validate and performance of MAT and WA for random dataset
cv_rand_mat_tjul <- rioja::crossval(rand_mat_tjul, verbose = FALSE)
plot(cv_rand_mat_tjul, main = 'Random CV MAT tjul')
pfcv_rand_mat_tjul <- rioja::performance(cv_rand_mat_tjul)
pfcv_rand_mat_tjul

cv_rand_wa_tjul <- rioja::crossval(rand_wa_tjul, verbose = FALSE)
plot(cv_rand_wa_tjul, main = 'Random CV WA tjul')
pfcv_rand_wa_tjul <- rioja::performance(cv_rand_wa_tjul)
pfcv_rand_wa_tjul

cv_rand_mat_sjul <- rioja::crossval(rand_mat_sjul, verbose = FALSE)
plot(cv_rand_mat_sjul, main = 'Random CV MAT sjul')
pfcv_rand_mat_sjul <- rioja::performance(cv_rand_mat_sjul)
pfcv_rand_mat_sjul

cv_rand_wa_sjul <- rioja::crossval(rand_wa_sjul, verbose = FALSE)
plot(cv_rand_wa_sjul, main = 'Random CV WA sjul')
pfcv_rand_wa_sjul <- rioja::performance(cv_rand_wa_sjul)
pfcv_rand_wa_sjul


#Part 3 Code:

#Load Packages for Analysis
library(neotoma)
library(vegan)
library(analogue)
library(rioja)

#Load in climate data and pollen data from NAMPD (North American Pollen Database)
#via Analogue package
data(Climate)
data(Pollen)
Pollen <- replace(Pollen, is.na(Pollen), 0)

#Fix error in Climate data
colnames(Climate)[1:3] <- c('tjan', 'tfeb', 'tmar')

#Get Mendota data from Neotoma
mend_ds <- get_dataset(1679)
mend_data <- get_download(mend_ds)

#Extract Pollen data from Mendota data and convert it to proportion
mend_pol <- mend_data[[1]]

#Convert pollen counts to percents for the modern and fossil (mendota) data
mend_pol_pct <- analogue::tran(x = mend_pol$counts, method = 'percent')
nampd_pol_pct <- analogue::tran(x = Pollen, method = 'percent')

#mend_pol_pct <- data.frame(mend_pol_pct)
depths <- mend_pol$sample.meta$depth

#Compare taxa between Mendota pollen and NAMPD and remove those that are not in
#both databases
mend_pol_comp <- compile_taxa(mend_pol_pct, list = "WhitmoreFull")
fossil <- mend_pol_comp
fossil <- fossil[, -32] #removes 'other' column
modern <- nampd_pol_pct[,which(colnames(nampd_pol_pct) %in% colnames(fossil))]

#Create models for tjul and tjan using MAT, WA, and WAPLS
mat_tjul <- rioja::MAT(modern, Climate$tjul, k = 5, lean = FALSE)
plot(mat_tjul, main = 'MAT tjul')

wa_tjul <- rioja::WA(modern, Climate$tjul)
plot(wa_tjul, main = 'WA tjul')

wapls_tjul <- rioja::WAPLS(modern, Climate$tjul)
plot(wapls_tjul, main = 'WAPLS tjul')

mat_tjan <- rioja::MAT(modern, Climate$tjan, k = 5, lean = FALSE)
plot(mat_tjan, main = 'MAT tjan')

wa_tjan <- rioja::WA(modern, Climate$tjan)
plot(wa_tjan, main = 'WA tjan')

wapls_tjan <- rioja::WAPLS(modern, Climate$tjan)
plot(wapls_tjan, main = 'WAPLS tjan')

#Prediction models of tjan and tjul for MAT, WA, and WAPLS
mat_tjul.pred <- predict(mat_tjul, fossil)
wa_tjul.pred <- predict(wa_tjul, fossil)
wapls_tjul.pred <- predict(wapls_tjul, fossil)
mat_tjan.pred <- predict(mat_tjan, fossil)
wa_tjan.pred <- predict(wa_tjan, fossil)
wapls_tjan.pred <- predict(wapls_tjan, fossil)

#Depth/Time series of predictions and correlations of the fits

plot(depths, mat_tjul.pred$fit[,'MAT'], type = 'l', ylab = 'July Temp [C]', main ='tjul MAT Time Series', col = 'green')
points(depths, wa_tjul.pred$fit[,'WA.inv'], type ='l', col = 'blue')
points(depths, wapls_tjul.pred$fit[,'Comp01'], type = 'l', col = 'red')
legend(100, 21, legend = c("MAT", "WA", "WAPLS"), col=c("green", "blue", "red"), lty=1:3, cex = 0.8)
cor(mat_tjul.pred$fit, wa_tjul.pred$fit)
cor(mat_tjul.pred$fit, wapls_tjul.pred$fit)
cor(wa_tjul.pred$fit, wapls_tjul.pred$fit)

plot(depths, mat_tjan.pred$fit[,'MAT'], type = 'l', ylab = 'January Temp [C]', main ='tjan MAT Time Series', col = 'green')
points(depths, wa_tjan.pred$fit[,'WA.inv'], type ='l', col = 'blue')
points(depths, wapls_tjan.pred$fit[,'Comp01'], type = 'l', col = 'red')
legend(100, -12, legend = c("MAT", "WA", "WAPLS"), col=c("green", "blue", "red"), lty=1:3, cex = 0.8)
cor(mat_tjan.pred$fit, wa_tjan.pred$fit)
cor(mat_tjan.pred$fit, wapls_tjan.pred$fit)
cor(wa_tjan.pred$fit, wapls_tjan.pred$fit)
